[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "pybind11[global]",
    "cmake",
]

[tool.cibuildwheel]
skip = ["pp*"] # Do not build for PyPy

## Windows build configuration
[tool.cibuildwheel.windows]
#archs = ["x86", 'AMD64']
archs = ['AMD64']
before-build = [
    "pip install pybind11[global]",
    "pip install -U cmake",
    # dont drop these () at the both sides, otherwise the CI will fail after concat all commands with &&
    "(if \"%PYTHON_ARCH%\"==\"32\" (cmake -S UUtils -B build -A Win32 -DCMAKE_BUILD_TYPE=Release) else (cmake -S UUtils -B build -A x64 -DCMAKE_BUILD_TYPE=Release))",
    "cmake --build build --config Release",
    "ctest --test-dir build --output-on-failure -C Release",
    "cmake --install build --prefix bin_install --config Release",
]
before-test = [# Unittest for windows
    "pip install -r \"{project}\\requirements-test.txt\"",
]
test-command = [
    "rm -rf \"{project}\\build\"",
    "rm -rf \"{project}\\bin_install\"",
    "xcopy /e /i \"{project}\\test\" test",
    "copy \"{project}\\pytest.ini\" pytest.ini",
    "pytest test -sv -m unittest --log-level=DEBUG",
    "rmdir /s /q test",
]

## macOS build configuration
[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"] # Build for x86_64 and arm64
before-build = [
    "./macos_kill_cmake.sh",
    "pip install pybind11[global]",
    "pip install -U cmake",
    "uname -m",
    "echo uname xxxxx",
    "if [ \"$(uname -m)\" = \"arm64\" ]; then cmake -S UUtils -B build -DCMAKE_OSX_ARCHITECTURES=\"arm64\" -DCMAKE_SYSTEM_PROCESSOR=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_TRY_COMPILE_OSX_ARCHITECTURES=arm64; else cmake -S UUtils -B build -DCMAKE_OSX_ARCHITECTURES=\"x86_64\" -DCMAKE_SYSTEM_PROCESSOR=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 -DCMAKE_BUILD_TYPE=Release -DCMAKE_TRY_COMPILE_OSX_ARCHITECTURES=x86_64; fi",
#    "cmake -S UUtils -B build -DCMAKE_BUILD_TYPE=Release",
    "cmake --build build --config Release",
    "ctest --test-dir build --output-on-failure -C Release",
    "cmake --install build --prefix bin_install --config Release",
]
before-test = [# Unittest for macos
    "pip install -r {project}/requirements-test.txt",
]
test-command = [
    "rm -rf {project}/build {project}/bin_install",
    "cp -rf {project}/test test",
    "cp {project}/pytest.ini pytest.ini",
    "pytest test -sv -m unittest --log-level=DEBUG",
    "rm -rf test",
]


## Linux build configuration
[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64"] # Build for x86_64 and arm64
#skip = ["pp* *musllinux*"] # dependencies do not build for musl
skip = ["pp*"] # dependencies do not build for musl
before-build = [
    "pip install pybind11[global]",
    "pip install -U cmake",
    "cmake -S UUtils -B build -DCMAKE_BUILD_TYPE=Release",
    "cmake --build build --config Release",
    "ctest --test-dir build --output-on-failure -C Release",
    "cmake --install build --prefix bin_install --config Release",
]
before-test = [# Unittest for linux
    "pip install -r {project}/requirements-test.txt",
]
test-command = [
    "rm -rf {project}/build {project}/bin_install",
    "cp -rf {project}/test test",
    "cp {project}/pytest.ini pytest.ini",
    "pytest test -sv -m unittest --log-level=DEBUG",
    "rm -rf test",
]